{"version":3,"sources":["hook/useAuth.js","api/Interceptor.js","api/useMutateQuery.js","pages/login/Login.js","pages/dashboard/models/AddEmployee.js","api/useGetQuery.js","pages/dashboard/models/EditEmployeeInformation.js","pages/dashboard/models/DeleteEmployee.js","pages/dashboard/Dashboard.js","pages/user-dashboard/UserDashboard.js","App.js","index.js"],"names":["useAuth","authenticated","setAuthenticated","useState","sessionStorage","getItem","useEffect","handleStorageChange","window","addEventListener","removeEventListener","api","axios","create","baseURL","interceptors","response","use","error","status","location","pathname","localStorage","removeItem","href","Promise","reject","request","config","accessToken","headers","concat","useMutateQuery","queryClient","useQueryClient","useMutation","async","url","body","method","_ref","data","onSuccess","invalidateQueries","onError","console","Login","_errors$username","_errors$password","mutateAsync","navigate","useNavigate","register","handleSubmit","formState","errors","reset","useForm","React","createElement","className","Container","maxWidth","sx","display","justifyContent","alignItems","height","Box","backgroundColor","textAlign","minWidth","maxHeight","padding","boxShadow","borderRadius","Typography","variant","color","fontSize","onSubmit","username","formData","password","token","setItem","role","TextField","Object","assign","required","label","fullWidth","margin","helperText","message","type","Button","alignContent","width","textTransform","marginTop","marginLeft","AddEmployee","_errors$firstName","_errors$lastName","_errors$email","_errors$age","handleClose","handleOpen","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarColor","setSnackbarColor","Fragment","Modal","open","onClose","position","top","left","transform","bgcolor","p","paddingBottom","firstName","lastName","email","age","Snackbar","autoHideDuration","SnackbarContent","useGetQuery","queryKey","queryParams","enabled","arguments","length","undefined","useQuery","get","params","getElements","refetchOnWindowFocus","EditEmployeeInformation","employeeId","employeeData","log","setValue","setFormValues","prefix","key","updatedData","DeleteEmployee","paddingTop","onClick","autoFocus","Dashboard","_employeeData$employe","_employeeData$employe2","addEmployee","setAddEmployee","editEmployee","setEditEmployee","deleteEmployee","setDeleteEmployee","setEmployeeData","anchorEl","setAnchorEl","selectedEmployeeId","setSelectedEmployeeId","search","setSearch","page","setPage","Boolean","employeeListQuery","isLoading","limit","handelDeleteEmployeeClick","handlePageChange","columns","field","headerName","renderCell","id","aria-controls","aria-haspopup","aria-expanded","event","handleClick","currentTarget","row","_id","MoreVertIcon","Menu","MenuListProps","aria-labelledby","MenuItem","DeleteOutlineIcon","EditIcon","paddingLeft","paddingRight","&:hover","InputProps","startAdornment","InputAdornment","SearchIcon","style","value","onChange","e","target","placeholder","handleAddEmployeeClick","AddIcon","Divider","DataGrid","rows","employees","getRowId","pageSizeOptions","onPageChange","Pagination","count","Math","ceil","totalPages","handleCloseAddEmployeeClick","handleCloseEditEmployeeClick","find","employee","handelCloseDeleteEmployeeClick","UserDashboard","ProtectedRoute","element","rest","isAuthenticated","Navigate","to","App","BrowserRouter","Routes","Route","index","path","QueryClient","ReactDOM","createRoot","document","getElementById","render","StrictMode","QueryClientProvider","client"],"mappings":"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","file":"static/js/main.7792440c.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nfunction useAuth() {\r\n  const [authenticated, setAuthenticated] = useState(\r\n    !!sessionStorage.getItem('jwt')\r\n  );\r\n\r\n  useEffect(() => {\r\n    const handleStorageChange = () => {\r\n      setAuthenticated(!!sessionStorage.getItem('jwt'));\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, []);\r\n\r\n  return authenticated;\r\n}\r\n\r\nexport default useAuth;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://younis-backend-production.up.railway.app\",\r\n});\r\n\r\nconst handleUnauthorizedError = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"user\");\r\n  window.location.href = \"/login\";\r\n};\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (\r\n      error.response &&\r\n      error.response.status === 401 &&\r\n      window.location.pathname !== \"/login\"\r\n    ) {\r\n      handleUnauthorizedError();\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const accessToken = sessionStorage.getItem(\"jwt\");\r\n\r\n    if (accessToken && config.headers) {\r\n      config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport { api };\r\n","import { useMutation, useQueryClient } from \"react-query\";\r\nimport { api } from \"./Interceptor\";\r\n\r\nexport const useMutateQuery = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const createElement = async ({ url, body, method, headers }) => {\r\n    try {\r\n      const response = await api({\r\n        method,\r\n        url,\r\n        data: body,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response ? error.response.data : error;\r\n    }\r\n  };\r\n\r\n  return useMutation(createElement, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries();\r\n    },\r\n    onError: (error) => {\r\n      console.error(error);\r\n    },\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { TextField, Button, Box, Container, Typography } from '@mui/material';\r\nimport { useMutateQuery } from '../../api/useMutateQuery';\r\n\r\nimport './login.css';\r\n\r\nfunction Login() {\r\n  const { mutateAsync } = useMutateQuery();\r\n  const navigate = useNavigate();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const onSubmit = async (formData) => {\r\n    try {\r\n      const data = await mutateAsync({\r\n        url: `/api/auth/login/v1`,\r\n        method: 'post',\r\n        body: {\r\n          username: formData.username,\r\n          password: formData.password,\r\n        },\r\n      });\r\n      if (data.token) {\r\n        sessionStorage.setItem('jwt', data.token);\r\n      }\r\n      if (data?.role === 'admin') {\r\n        navigate('/dashboard');\r\n      } else if (data?.role === 'user') {\r\n        navigate('/userDashboard');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating URL:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <Container\r\n        maxWidth=\"xl\"\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '100vh',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            backgroundColor: '#EDDEE2',\r\n            textAlign: 'center',\r\n            minWidth: 540,\r\n            maxWidth: 700,\r\n            maxHeight: 450,\r\n            padding: '50px 50px 50px 50px',\r\n            boxShadow: '2px 2px 2px 2px rgba(0,0,0,0.1)',\r\n            borderRadius: '10px',\r\n          }}\r\n        >\r\n          <Typography variant=\"h3\" sx={{ color: '#1a1a1a' }}>\r\n            Welcome back!\r\n          </Typography>\r\n          <Typography variant=\"h7\" sx={{ color: '#1a1a1a', fontSize: '17px' }}>\r\n            Enter your user name and password to login\r\n          </Typography>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              {...register('username', { required: 'Username is required' })}\r\n              label=\"Username\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={!!errors.username}\r\n              helperText={errors.username?.message}\r\n            />\r\n            <TextField\r\n              {...register('password', { required: 'Password is required' })}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={!!errors.password}\r\n              helperText={errors.password?.message}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              sx={{\r\n                backgroundColor: '#319DEB',\r\n                display: 'flex',\r\n                alignContent: 'center',\r\n                alignItems: 'center',\r\n                width: '50%',\r\n                textTransform: 'none',\r\n                marginTop: '10px',\r\n                marginLeft: '115px',\r\n                padding: '15px',\r\n                borderRadius: '10px',\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Modal,\r\n  SnackbarContent,\r\n  Snackbar,\r\n} from '@mui/material';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useMutateQuery } from '../../../api/useMutateQuery';\r\n\r\nexport default function AddEmployee({ handleClose, handleOpen }) {\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [snackbarColor, setSnackbarColor] = useState('#4CCD99');\r\n\r\n  const { mutateAsync } = useMutateQuery();\r\n\r\n  const {\r\n    register,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = async (formData) => {\r\n    try {\r\n      const data = await mutateAsync({\r\n        url: `/api/employees`,\r\n        method: 'post',\r\n        body: {\r\n          firstName: formData.firstName,\r\n          lastName: formData.lastName,\r\n          email: formData.email,\r\n          age: formData.age,\r\n        },\r\n      });\r\n      setSnackbarMessage('Employee added successfully!');\r\n      setSnackbarColor('#4CCD99');\r\n\r\n      setSnackbarOpen(true);\r\n\r\n      reset();\r\n\r\n      handleClose();\r\n    } catch (error) {\r\n      setSnackbarMessage('Failed to add employee. Please try again.');\r\n      setSnackbarColor('#FF6347');\r\n      setSnackbarOpen(true);\r\n      console.error('Error updating URL:', error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal open={handleOpen} onClose={handleClose}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: 600,\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 6,\r\n          }}\r\n        >\r\n          <Typography variant=\"h3\">Add Employee</Typography>\r\n          <Typography variant=\"h5\" sx={{ paddingBottom: '20px' }}>\r\n            Enter your employee information\r\n          </Typography>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              {...register('firstName', { required: 'First Name is required' })}\r\n              label=\"First Name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={!!errors.firstName}\r\n              helperText={errors.firstName?.message}\r\n            />\r\n            <TextField\r\n              {...register('lastName', { required: 'Last Name is required' })}\r\n              label=\"Last Name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={!!errors.lastName}\r\n              helperText={errors.lastName?.message}\r\n            />\r\n            <TextField\r\n              {...register('email', { required: 'Email is required' })}\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={!!errors.email}\r\n              helperText={errors.email?.message}\r\n            />\r\n            <TextField\r\n              {...register('age', { required: 'Age is required' })}\r\n              label=\"Age\"\r\n              type=\"number\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={!!errors.age}\r\n              helperText={errors.age?.message}\r\n            />\r\n            <Button\r\n              // onClick={handleClose}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              sx={{\r\n                backgroundColor: '#319DEB',\r\n                display: 'flex',\r\n                alignContent: 'center',\r\n                alignItems: 'center',\r\n                width: '50%',\r\n                textTransform: 'none',\r\n                marginTop: '10px',\r\n                marginLeft: '115px',\r\n                padding: '15px',\r\n                borderRadius: '10px',\r\n              }}\r\n            >\r\n              Done\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      </Modal>\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbarOpen(false)}\r\n      >\r\n        <SnackbarContent\r\n          sx={{\r\n            backgroundColor: snackbarColor,\r\n            color: 'white',\r\n          }}\r\n          message={snackbarMessage}\r\n        />\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n","import { useQuery } from 'react-query';\r\nimport { api } from './Interceptor';\r\n\r\nconst getElements = async (url, queryParams) => {\r\n  const { data } = await api.get(url, {\r\n    params: queryParams,\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const useGetQuery = (queryKey, url, queryParams, enabled = true) => {\r\n  return useQuery(queryKey, () => getElements(url, queryParams), {\r\n    refetchOnWindowFocus: false,\r\n    enabled,\r\n  });\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Modal,\r\n  SnackbarContent,\r\n  Snackbar,\r\n} from '@mui/material';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useMutateQuery } from '../../../api/useMutateQuery';\r\nexport default function EditEmployeeInformation({\r\n  handleClose,\r\n  handleOpen,\r\n  employeeId,\r\n  employeeData,\r\n}) {\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [snackbarColor, setSnackbarColor] = useState('#4CCD99');\r\n  const { mutateAsync } = useMutateQuery();\r\n  console.log('employeeData', employeeData);\r\n  const { register, handleSubmit, setValue } = useForm();\r\n  useEffect(() => {\r\n    const setFormValues = (data, prefix = '') => {\r\n      for (const key in data) {\r\n        if (typeof data[key] === 'object') {\r\n          setFormValues(data[key], `${prefix}${key}.`);\r\n        } else {\r\n          setValue(`${prefix}${key}`, data[key]);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (employeeData) {\r\n      setFormValues(employeeData);\r\n    }\r\n  }, [employeeData, setValue]);\r\n\r\n  const onSubmit = async (formData) => {\r\n    try {\r\n      const updatedData = { ...employeeData, ...formData };\r\n      const data = await mutateAsync({\r\n        url: `/api/employees/${employeeId}`,\r\n        method: 'put',\r\n        body: updatedData,\r\n      });\r\n      setSnackbarMessage('Employee Edited successfully!');\r\n      setSnackbarColor('#4CCD99');\r\n      setSnackbarOpen(true);\r\n\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error('Error updating URL:', error);\r\n      setSnackbarMessage('Failed to Edit employee. Please try again.');\r\n      setSnackbarColor('#FF6347');\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal open={handleOpen} onClose={handleClose}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: 600,\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 6,\r\n          }}\r\n        >\r\n          <Typography variant=\"h3\">Edit Employee</Typography>\r\n          <Typography variant=\"h5\" sx={{ paddingBottom: '20px' }}>\r\n            Edit your employee information\r\n          </Typography>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              {...register('firstName')}\r\n              label=\"First Name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n            <TextField\r\n              {...register('lastName')}\r\n              label=\"Last Name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n            <TextField\r\n              {...register('email')}\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n            <TextField\r\n              {...register('age')}\r\n              label=\"Age\"\r\n              type=\"number\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              sx={{\r\n                backgroundColor: '#319DEB',\r\n                display: 'flex',\r\n                alignContent: 'center',\r\n                alignItems: 'center',\r\n                width: '50%',\r\n                textTransform: 'none',\r\n                marginTop: '10px',\r\n                marginLeft: '115px',\r\n                padding: '15px',\r\n                borderRadius: '10px',\r\n              }}\r\n            >\r\n              Done\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      </Modal>\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbarOpen(false)}\r\n      >\r\n        <SnackbarContent\r\n          sx={{\r\n            backgroundColor: snackbarColor,\r\n            color: 'white',\r\n          }}\r\n          message={snackbarMessage}\r\n        />\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Modal,\r\n  SnackbarContent,\r\n  Snackbar,\r\n} from '@mui/material';\r\n\r\nimport { useMutateQuery } from '../../../api/useMutateQuery';\r\n\r\nexport default function DeleteEmployee({\r\n  handleOpen,\r\n  handleClose,\r\n  employeeId,\r\n}) {\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [snackbarColor, setSnackbarColor] = useState('#4CCD99');\r\n  const { mutateAsync } = useMutateQuery();\r\n\r\n  const handelDelete = async () => {\r\n    try {\r\n      const deleteEvent = await mutateAsync({\r\n        url: `/api/employees/${employeeId}`,\r\n        method: 'delete',\r\n      });\r\n      setSnackbarMessage('Employee deleted successfully!');\r\n      setSnackbarColor('#4CCD99');\r\n      setSnackbarOpen(true);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error('Error deleting:', error);\r\n      setSnackbarMessage('Failed to delete employee. Please try again.');\r\n      setSnackbarColor('#FF6347');\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Button onClick={handleOpen}>Open modal</Button> */}\r\n      <Modal Modal open={handleOpen} onClose={handleClose}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            backgroundColor: 'white',\r\n            boxShadow: 24,\r\n            p: 5,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            Are you sure you want to delete this Employee?\r\n          </Typography>\r\n          <Box sx={{ paddingTop: '10px' }}>\r\n            <Button onClick={handelDelete}>Delete</Button>\r\n            <Button\r\n              onClick={handleClose}\r\n              autoFocus\r\n              sx={{ backgroundColor: '#dcf4f8' }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbarOpen(false)}\r\n      >\r\n        <SnackbarContent\r\n          sx={{\r\n            backgroundColor: snackbarColor,\r\n            color: 'white',\r\n          }}\r\n          message={snackbarMessage}\r\n        />\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  InputAdornment,\r\n  Divider,\r\n  Menu,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AddEmployee from './models/AddEmployee';\r\nimport { useGetQuery } from '../../api/useGetQuery';\r\nimport { useMutateQuery } from '../../api/useMutateQuery';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport EditEmployeeInformation from './models/EditEmployeeInformation';\r\nimport DeleteEmployee from './models/DeleteEmployee';\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\nexport default function Dashboard() {\r\n  const [addEmployee, setAddEmployee] = useState(false);\r\n  const [editEmployee, setEditEmployee] = useState(false);\r\n  const [deleteEmployee, setDeleteEmployee] = useState(false);\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState(null);\r\n  const [search, setSearch] = useState([]);\r\n  const limit = 10;\r\n  const [page, setPage] = useState(1);\r\n  const { mutateAsync } = useMutateQuery();\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const {\r\n    data: employeeListQuery,\r\n    isLoading,\r\n    error,\r\n  } = useGetQuery(\r\n    `api-employees-${page}-${limit}-${search}`,\r\n    `/api/employees`,\r\n    {\r\n      page: page,\r\n      limit: limit,\r\n      search: search,\r\n    }\r\n  );\r\n  // const {\r\n  //   data: employeeListQuery,\r\n  //   isLoading,\r\n  //   error,\r\n  // } = useGetQuery(\r\n  //   `api-employees-${page}-${limit}`,\r\n  //   `/api/employees?page=${page}&limit=${limit}`\r\n  // );\r\n  // console.log('employeeListQuery', employeeListQuery);\r\n\r\n  useEffect(() => {\r\n    if (employeeListQuery) {\r\n      setEmployeeData(employeeListQuery);\r\n    }\r\n  }, [employeeListQuery]);\r\n\r\n  const handleAddEmployeeClick = () => setAddEmployee(true);\r\n  const handleCloseAddEmployeeClick = () => setAddEmployee(false);\r\n\r\n  const handleEditEmployeeClick = () => setEditEmployee(true);\r\n\r\n  const handleCloseEditEmployeeClick = () => setEditEmployee(false);\r\n\r\n  const handelDeleteEmployeeClick = () => setDeleteEmployee(true);\r\n  const handelCloseDeleteEmployeeClick = () => setDeleteEmployee(false);\r\n\r\n  const handleClick = (event, employeeId) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedEmployeeId(employeeId);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handlePageChange = () => {\r\n    setPage(page + 1);\r\n  };\r\n  const handelLogOut = async () => {\r\n    sessionStorage.removeItem('jwt');\r\n    try {\r\n      const data = await mutateAsync({\r\n        url: `/api/auth/logout/v1`,\r\n        method: 'post',\r\n      });\r\n      window.location.href = '/login';\r\n    } catch (error) {\r\n      console.error('Error updating URL:', error);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'firstName',\r\n      headerName: 'First Name',\r\n      width: 130,\r\n    },\r\n    { field: 'lastName', headerName: 'Last Name', width: 130 },\r\n    { field: 'email', headerName: 'Email', width: 200 },\r\n    { field: 'age', headerName: 'Age', width: 130 },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 130,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Button\r\n              id=\"basic-button\"\r\n              aria-controls={open ? 'basic-menu' : undefined}\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={open ? 'true' : undefined}\r\n              onClick={(event) => handleClick(event, params.row._id)}\r\n            >\r\n              <MoreVertIcon />\r\n            </Button>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              MenuListProps={{\r\n                'aria-labelledby': 'basic-button',\r\n              }}\r\n            >\r\n              <MenuItem onClick={handleClose} sx={{ color: '#1a1a1a' }}>\r\n                <Button onClick={handelDeleteEmployeeClick}>\r\n                  <DeleteOutlineIcon sx={{ color: '#ff0000' }} /> Delete\r\n                </Button>\r\n              </MenuItem>\r\n\r\n              <MenuItem onClick={handleClose} sx={{ color: '#1a1a1a' }}>\r\n                <Button onClick={() => handleEditEmployeeClick(params.row._id)}>\r\n                  <EditIcon sx={{ color: '#0000ff' }} /> Edit\r\n                </Button>\r\n              </MenuItem>\r\n            </Menu>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          paddingTop: '20px',\r\n          paddingLeft: '60px',\r\n          paddingRight: '60px',\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={handelLogOut}\r\n          sx={{\r\n            backgroundColor: '#319DEB',\r\n            textTransform: 'capitalize',\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            paddingBottom: '200px',\r\n\r\n            fontSize: '14px',\r\n            width: '140px',\r\n            height: '45px',\r\n            padding: '1%',\r\n            '&:hover': {\r\n              backgroundColor: '#319DEB',\r\n              color: 'white',\r\n            },\r\n          }}\r\n        >\r\n          Log out\r\n        </Button>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            textTransform: 'capitalize',\r\n            paddingTop: '30px',\r\n          }}\r\n        >\r\n          <TextField\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n              style: {\r\n                width: '250px',\r\n                borderRadius: '10px',\r\n                height: '45px',\r\n              },\r\n            }}\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            placeholder=\"Search...\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          />\r\n\r\n          <Button\r\n            sx={{\r\n              backgroundColor: '#319DEB',\r\n              textTransform: 'capitalize',\r\n              color: 'white',\r\n              borderRadius: '10px',\r\n              paddingRight: '80px',\r\n              fontSize: '14px',\r\n              width: '170px',\r\n              height: '45px',\r\n              padding: '1%',\r\n              '&:hover': {\r\n                backgroundColor: '#319DEB',\r\n                color: 'white',\r\n              },\r\n            }}\r\n            onClick={handleAddEmployeeClick}\r\n          >\r\n            <AddIcon />\r\n            Add employee\r\n          </Button>\r\n        </Box>\r\n        <Divider sx={{ paddingTop: '10px', fontSize: '10px' }} />\r\n        <Box sx={{ paddingTop: '10px' }}>\r\n          {isLoading ? (\r\n            <div>Loading...</div>\r\n          ) : error ? (\r\n            <div>Error: {error.message}</div>\r\n          ) : (\r\n            <DataGrid\r\n              rows={\r\n                employeeData?.employees?.length > 0\r\n                  ? employeeData?.employees\r\n                  : []\r\n              }\r\n              columns={columns}\r\n              getRowId={(row) => row._id}\r\n              pageSizeOptions={[10, 15, 25]}\r\n              {...employeeData}\r\n              onPageChange={handlePageChange}\r\n              onClick={handlePageChange}\r\n            />\r\n          )}\r\n          <Pagination\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            count={Math.ceil(employeeListQuery?.totalPages)}\r\n            onChange={(e, value) => setPage(value)}\r\n            sx={{\r\n              margin: '20px auto',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              color: '#0097B2',\r\n              paddingBottom: '15px',\r\n            }}\r\n          />\r\n        </Box>\r\n        <AddEmployee\r\n          handleClose={handleCloseAddEmployeeClick}\r\n          handleOpen={addEmployee}\r\n        />\r\n        <EditEmployeeInformation\r\n          handleClose={handleCloseEditEmployeeClick}\r\n          handleOpen={editEmployee}\r\n          employeeId={selectedEmployeeId}\r\n          employeeData={employeeData?.employees?.find(\r\n            (employee) => employee._id === selectedEmployeeId\r\n          )}\r\n        />\r\n        <DeleteEmployee\r\n          handleClose={handelCloseDeleteEmployeeClick}\r\n          handleOpen={deleteEmployee}\r\n          employeeId={selectedEmployeeId}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { Box, Button, TextField, InputAdornment, Divider } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { useGetQuery } from '../../api/useGetQuery';\r\nimport { useMutateQuery } from '../../api/useMutateQuery';\r\n\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\nexport default function UserDashboard() {\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [search, setSearch] = useState([]);\r\n  const limit = 10;\r\n  const [page, setPage] = useState(1);\r\n  const { mutateAsync } = useMutateQuery();\r\n\r\n  const {\r\n    data: employeeListQuery,\r\n    isLoading,\r\n    error,\r\n  } = useGetQuery(\r\n    `api-employees-${page}-${limit}-${search}`,\r\n    `/api/employees`,\r\n    {\r\n      page: page,\r\n      limit: limit,\r\n      search: search,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeListQuery) {\r\n      setEmployeeData(employeeListQuery);\r\n    }\r\n  }, [employeeListQuery]);\r\n\r\n  const handlePageChange = () => {\r\n    setPage(page + 1);\r\n  };\r\n  const handelLogOut = async () => {\r\n    sessionStorage.removeItem('jwt');\r\n    try {\r\n      const data = await mutateAsync({\r\n        url: `/api/auth/logout/v1`,\r\n        method: 'post',\r\n      });\r\n      window.location.href = '/login';\r\n    } catch (error) {\r\n      console.error('Error updating URL:', error);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'firstName',\r\n      headerName: 'First Name',\r\n      width: 130,\r\n    },\r\n    { field: 'lastName', headerName: 'Last Name', width: 130 },\r\n    { field: 'email', headerName: 'Email', width: 200 },\r\n    { field: 'age', headerName: 'Age', width: 130 },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          paddingTop: '20px',\r\n          paddingLeft: '60px',\r\n          paddingRight: '60px',\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={handelLogOut}\r\n          sx={{\r\n            backgroundColor: '#319DEB',\r\n            textTransform: 'capitalize',\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            paddingBottom: '200px',\r\n\r\n            fontSize: '14px',\r\n            width: '140px',\r\n            height: '45px',\r\n            padding: '1%',\r\n            '&:hover': {\r\n              backgroundColor: '#319DEB',\r\n              color: 'white',\r\n            },\r\n          }}\r\n        >\r\n          Log out\r\n        </Button>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            textTransform: 'capitalize',\r\n            paddingTop: '30px',\r\n          }}\r\n        >\r\n          <TextField\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n              style: {\r\n                width: '250px',\r\n                borderRadius: '10px',\r\n                height: '45px',\r\n              },\r\n            }}\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            placeholder=\"Search...\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          />\r\n        </Box>\r\n        <Divider sx={{ paddingTop: '10px', fontSize: '10px' }} />\r\n        <Box sx={{ paddingTop: '10px' }}>\r\n          {isLoading ? (\r\n            <div>Loading...</div>\r\n          ) : error ? (\r\n            <div>Error: {error.message}</div>\r\n          ) : (\r\n            <DataGrid\r\n              rows={\r\n                employeeData?.employees?.length > 0\r\n                  ? employeeData?.employees\r\n                  : []\r\n              }\r\n              columns={columns}\r\n              getRowId={(row) => row._id}\r\n              pageSizeOptions={[10, 15, 25]}\r\n              {...employeeData}\r\n              onPageChange={handlePageChange}\r\n              onClick={handlePageChange}\r\n            />\r\n          )}\r\n          <Pagination\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            count={Math.ceil(employeeListQuery?.totalPages)}\r\n            onChange={(e, value) => setPage(value)}\r\n            sx={{\r\n              margin: '20px auto',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              color: '#0097B2',\r\n              paddingBottom: '15px',\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\r\nimport useAuth from \"./hook/useAuth\";\r\nimport Login from \"./pages/login/Login\";\r\nimport Dashboard from \"./pages/dashboard/Dashboard\";\r\nimport UserDashboard from \"./pages/user-dashboard/UserDashboard\";\r\n\r\nfunction ProtectedRoute({ element, ...rest }) {\r\n  const isAuthenticated = useAuth();\r\n  console.log(isAuthenticated);\r\n  return isAuthenticated ? element : <Navigate to=\"/login\" />;\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route index element={<Login />} />\r\n        {/* <Route path=\"/login\" element={<Login />} /> */}\r\n\r\n        <Route\r\n          path=\"/dashboard\"\r\n          element={<ProtectedRoute element={<Dashboard />} />}\r\n        />\r\n        <Route\r\n          path=\"/userDashboard\"\r\n          element={<ProtectedRoute element={<UserDashboard />} />}\r\n        />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <QueryClientProvider client={queryClient}>\r\n      <App />\r\n    </QueryClientProvider>\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}